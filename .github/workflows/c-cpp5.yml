name: C/C++ Build

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
        
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y g++-multilib

      - name: Install Premake
        run: |
          wget https://github.com/premake/premake-core/releases/download/v5.0.0-beta2/premake-5.0.0-beta2-linux.tar.gz -O premake.tar.gz
          tar -xvf premake.tar.gz
          chmod +x premake5
          sudo cp premake5 /usr/bin

      - name: Generate Project
        run: |
          premake5 --gmcommon=garrysmod_common gmake

      - name: Build
        run: |
          cd projects/linux/gmake
          make
          make config=releasewithsymbols_x86_64

      - name: Upload Linux 32-bit DLL
        uses: actions/upload-artifact@v4
        with:
          name: gmsv_eightbit_linux.dll
          path: projects/linux/gmake/x86/ReleaseWithSymbols/gmsv_eightbit_linux.dll

      - name: Upload Linux 64-bit DLL
        uses: actions/upload-artifact@v4
        with:
          name: gmsv_eightbit_linux64.dll
          path: projects/linux/gmake/x86_64/ReleaseWithSymbols/gmsv_eightbit_linux64.dll

  build-windows:
    runs-on: windows-2019
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Premake
        run: |
          curl -L https://github.com/premake/premake-core/releases/download/v5.0.0-beta2/premake-5.0.0-beta2-windows.zip -o premake.zip
          tar -xf premake.zip

      - name: Generate Project
        run: |
          ./premake5.exe --gmcommon=garrysmod_common vs2019

      - name: Build 32-bit
        run: |
          cd projects/windows/vs2019
          & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe" /p:Configuration=ReleaseWithSymbols /p:Platform=Win32 eightbit.sln

      - name: Upload Windows 32-bit DLL
        uses: actions/upload-artifact@v4
        with:
          name: gmsv_eightbit_windows.dll
          path: projects/windows/vs2019/x86/ReleaseWithSymbols/gmsv_eightbit_win32.dll

      - name: Build 64-bit
        run: |
          cd projects/windows/vs2019
          & "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\msbuild.exe" /p:Configuration=ReleaseWithSymbols /p:Platform=x64 eightbit.sln

      - name: Upload Windows 64-bit DLL
        uses: actions/upload-artifact@v4
        with:
          name: gmsv_eightbit_win64.dll
          path: projects/windows/vs2019/x86_64/ReleaseWithSymbols/gmsv_eightbit_win64.dll
